version: '3.8'

services:
  # Redis Database
  redis:
    image: redis:7-alpine
    container_name: geoai-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - geoai-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: geoai-backend
    restart: unless-stopped
    ports:
      - "8002:8002"
    environment:
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=production
      - API_V1_STR=/api/v1
    depends_on:
      - redis
    volumes:
      - ./data:/app/data
      - ./outputs:/app/outputs
    networks:
      - geoai-network

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: geoai-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8002
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - geoai-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: geoai-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - geoai-network

networks:
  geoai-network:
    driver: bridge

volumes:
  redis_data:
    driver: local